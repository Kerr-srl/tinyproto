default: all
DESTDIR ?=
BLD ?= bld
CONFIG_ENABLE_FCS32 ?= y
CONFIG_ENABLE_FCS16 ?= y
CONFIG_ENABLE_CHECKSUM ?= y
LOG_LEVEL ?=
ifeq ($(ENABLE_LOGS),y)
	ENABLE_HDLC_LOGS ?= y
	ENABLE_HD_LOGS ?= y
	ENABLE_FD_LOGS ?= y
endif

VERSION=0.8.0

CPPFLAGS += -I./src

CFLAGS += -std=gnu99
CPPFLAGS += -Os -Wall -Werror -ffunction-sections -fdata-sections $(EXTRA_CPPFLAGS)
CXXFLAGS += -std=c++11

ifneq ($(LOG_LEVEL),)
	CPPFLAGS += -DTINY_LOG_LEVEL_DEFAULT=$(LOG_LEVEL)
endif

ifeq ($(ENABLE_HDLC_LOGS),y)
	CPPFLAGS += -DTINY_HDLC_DEBUG=1
	ENABLE_DEBUG=y
endif
ifeq ($(ENABLE_HD_LOGS),y)
	CPPFLAGS += -DTINY_HD_DEBUG=1
	ENABLE_DEBUG=y
endif
ifeq ($(ENABLE_FD_LOGS),y)
	CPPFLAGS += -DTINY_FD_DEBUG=1
	ENABLE_DEBUG=y
endif
ifeq ($(ENABLE_DEBUG),y)
	CPPFLAGS += -DTINY_DEBUG=1
endif
ifeq ($(CONFIG_ENABLE_FCS32),y)
	CPPFLAGS += -DCONFIG_ENABLE_FCS32
endif

ifeq ($(CONFIG_ENABLE_FCS16),y)
	CPPFLAGS += -DCONFIG_ENABLE_FCS16
endif

ifeq ($(CONFIG_ENABLE_CHECKSUM),y)
	CPPFLAGS += -DCONFIG_ENABLE_CHECKSUM
endif

ifeq ($(CONFIG_ENABLE_STATS),y)
	CPPFLAGS += -DCONFIG_ENABLE_STATS
endif

.PHONY: all install docs release

####################### Compiling library #########################

TARGET_LIB ?= libtinyprotocol.a

OBJ_LIB += \
		src/proto/crc/crc.o \
		src/proto/light/tiny_light.o \
		src/proto/hdlc/tiny_hdlc.o \
		src/proto/fd/tiny_fd.o \
		src/proto/half_duplex/tiny_hd.o \
		src/proto/hal/tiny_list.o \
		src/proto/hal/tiny_types.o \
		src/proto/half_duplex/tiny_rq_pool.o \
		src/TinyProtocolHd.o \
		src/TinyProtocolFd.o \
		src/TinyLightProtocol.o \

prep:
ifdef CONFIG_FOR_WINDOWS_BUILD
	if not exist $(BLD)\lib mkdir $(BLD)\lib
else
	mkdir -p $(BLD)/lib
endif

library: $(OBJ_LIB)
	$(AR) rcs $(BLD)/lib/$(TARGET_LIB) $^

install:
ifdef CONFIG_FOR_WINDOWS_BUILD
	if not exist $(BLD)\include mkdir $(BLD)\include &\
	xcopy src bld\include /y /s &\
	for /R .\bld\include %%G in (*) do ( if not %%~xG==.h del /F/Q/S %%G )
else
	mkdir -p $(BLD)/include &\
	find ./src/ -name \*.h -exec cp --parents {} ./$(BLD)/include/ \;
endif

docs:
	doxygen doxygen.cfg

all: prep library

clean:
ifdef CONFIG_FOR_WINDOWS_BUILD
	if exist $(BLD) rd $(BLD) /q /s &\
	for /R .\src\ %%G in (*.o) do ( del /F/Q/S %%G )
else
	rm -rf $(BLD) $(OBJ_LIB) $(OBJ_LIB:.o=.gcno) $(OBJ_LIB:.o=.gcda) gmon.out
endif
